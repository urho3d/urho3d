$#include "Network/HttpRequest.h"

enum HttpRequestState
{
    HTTP_INITIALIZING,
    HTTP_ERROR,
    HTTP_OPEN,
    HTTP_CLOSED
};

class HttpRequest
{
    const String GetURL() const;
    const String GetVerb() const;
    String GetError() const;
    HttpRequestState GetState() const;
    unsigned GetAvailableSize() const;
    bool IsOpen() const;

    // From Deserializer
    // unsigned Read(void* dest, unsigned size);
    tolua_outside VectorBuffer HttpRequestRead @ Read(unsigned size);
    bool IsEof() const;

    int ReadInt();
    short ReadShort();
    signed char ReadByte();
    unsigned ReadUInt();
    unsigned short ReadUShort();
    unsigned char ReadUByte();
    bool ReadBool();
    float ReadFloat();
    double ReadDouble();
    IntRect ReadIntRect();
    IntVector2 ReadIntVector2();
    IntVector3 ReadIntVector3();
    Rect ReadRect();
    Vector2 ReadVector2();
    Vector3 ReadVector3();
    Vector3 ReadPackedVector3(float maxAbsCoord);
    Vector4 ReadVector4();
    Quaternion ReadQuaternion();
    Quaternion ReadPackedQuaternion();
    Matrix3 ReadMatrix3();
    Matrix3x4 ReadMatrix3x4();
    Matrix4 ReadMatrix4();
    Color ReadColor();
    BoundingBox ReadBoundingBox();
    String ReadString();
    String ReadFileID();
    StringHash ReadStringHash();

    // PODVector<unsigned char> ReadBuffer();
    VectorBuffer ReadBuffer();

    ResourceRef ReadResourceRef();
    ResourceRefList ReadResourceRefList();
    Variant ReadVariant();
    Variant ReadVariant(VariantType type);
    VariantVector ReadVariantVector();
    VariantMap ReadVariantMap();
    unsigned ReadVLE();
    unsigned ReadNetID();
    String ReadLine();

    tolua_readonly tolua_property__get_set String URL;
    tolua_readonly tolua_property__get_set String verb;
    tolua_readonly tolua_property__get_set String error;
    tolua_readonly tolua_property__get_set HttpRequestState state;
    tolua_readonly tolua_property__get_set unsigned availableSize;
    tolua_readonly tolua_property__is_set bool open;
};

${
static VectorBuffer HttpRequestRead(HttpRequest* request, unsigned size)
{
    unsigned char* data = new unsigned char[size];
    request->Read(data, size);
    VectorBuffer buffer(data, size);
    delete [] data;
    return buffer;
}
$}

