$#include "Graphics/Geometry.h"

class Geometry : public Object
{
    Geometry();
    ~Geometry();

    bool SetNumVertexBuffers(unsigned num);
    bool SetVertexBuffer(unsigned index, VertexBuffer* buffer);
    void SetIndexBuffer(IndexBuffer* buffer);
    bool SetDrawRange(PrimitiveType type, unsigned indexStart, unsigned indexCount, bool getUsedVertexRange = true);
    bool SetDrawRange(PrimitiveType type, unsigned indexStart, unsigned indexCount, unsigned vertexStart, unsigned vertexCount, bool checkIllegal = true);
    void SetLodDistance(float distance);

    unsigned GetNumVertexBuffers() const;
    VertexBuffer* GetVertexBuffer(unsigned index) const;
    IndexBuffer* GetIndexBuffer() const;
    PrimitiveType GetPrimitiveType() const;
    unsigned GetIndexStart() const;
    unsigned GetIndexCount() const;
    unsigned GetVertexStart() const;
    unsigned GetVertexCount() const;
    float GetLodDistance();
    bool IsEmpty() const;

    tolua_property__get_set unsigned numVertexBuffers;
    tolua_property__get_set IndexBuffer* indexBuffer;
    tolua_readonly tolua_property__get_set PrimitiveType primitiveType;
    tolua_readonly tolua_property__get_set unsigned indexStart;
    tolua_readonly tolua_property__get_set unsigned indexCount;
    tolua_readonly tolua_property__get_set unsigned vertexStart;
    tolua_readonly tolua_property__get_set unsigned vertexCount;
    tolua_property__get_set float lodDistance;
    tolua_readonly tolua_property__is_set bool empty;
};

${
#define TOLUA_DISABLE_tolua_GraphicsLuaAPI_Geometry_new00
static int tolua_GraphicsLuaAPI_Geometry_new00(lua_State* tolua_S)
{
    return ToluaNewObject<Geometry>(tolua_S);
}

#define TOLUA_DISABLE_tolua_GraphicsLuaAPI_Geometry_new00_local
static int tolua_GraphicsLuaAPI_Geometry_new00_local(lua_State* tolua_S)
{
    return ToluaNewObjectGC<Geometry>(tolua_S);
}
$}
