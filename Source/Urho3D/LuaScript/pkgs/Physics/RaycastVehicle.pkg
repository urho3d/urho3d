$#include "Physics/RaycastVehicle.h"

class RaycastVehicle : public LogicComponent
{
    RaycastVehicle(Urho3D::Context* context);
    ~RaycastVehicle();
    static void RegisterObject(Context* context);
    virtual void ApplyAttributes();
    void AddWheel(Node *wheelNode, Vector3 wheelDirection, Vector3 wheelAxle, float restLength, float wheelRadius, bool frontWheel);
    void ResetSuspension(void);
    void UpdateWheelTransform(int wheel, bool interpolated);
    void SetSteeringValue(int wheel, float steeringValue);
    void SetWheelSuspensionStiffness(int wheel, float stiffness);
    void SetWheelMaxSuspensionForce(int wheel, float force);
    void SetWheelDampingRelaxation(int wheel, float damping);
    void SetWheelDampingCompression(int wheel, float compression);
    void SetWheelFrictionSlip(int wheel, float slip);
    void SetWheelRollInfluence(int wheel, float rollInfluence);
    void SetEngineForce(int wheel, float force);
    void SetBrake(int wheel, float force);
    void SetWheelRadius(int wheel, float wheelRadius);
    void ResetWheels();
    void SetWheelRestLength(int wheel, float length);
    void SetWheelSkidInfo(int wheel, float factor);
    bool WheelIsGrounded(int wheel) const;
    void SetMaxSuspensionTravel(int wheel, float maxSuspensionTravel);
    void SetWheelDirection(int wheel, Vector3 direction);
    void SetWheelAxle(int wheel, Vector3 axle);
    void SetMaxSideSlipSpeed(float speed);
    void SetWheelSkidInfoCumulative(int wheel, float skid);
    void SetInAirRPM(float rpm);
    void SetCoordinateSystem(const IntVector3& coordinateSystem = RIGHT_UP_FORWARD);
    void Init();

    Vector3 GetWheelPosition(int wheel);
    Quaternion GetWheelRotation(int wheel);
    Vector3 GetWheelConnectionPoint(int wheel);
    int GetNumWheels();
    Node *GetWheelNode(int wheel);
    float GetSteeringValue(int wheel) const;
    float GetWheelSuspensionStiffness(int wheel) const;
    float GetWheelMaxSuspensionForce(int wheel) const;
    float GetWheelDampingRelaxation(int wheel) const;
    float GetWheelDampingCompression(int wheel) const;
    float GetWheelFrictionSlip(int wheel) const;
    float GetWheelRollInfluence(int wheel) const;
    float GetEngineForce(int wheel) const;
    float GetBrake(int wheel) const;
    float GetWheelRadius(int wheel) const;
    float GetWheelRestLength(int wheel) const;
    float GetWheelSkidInfo(int wheel) const;
    float GetMaxSuspensionTravel(int wheel);
    float GetWheelSideSlipSpeed(int wheel) const;
    float GetMaxSideSlipSpeed() const;
    float GetWheelSkidInfoCumulative(int wheel) const;
    Vector3 GetWheelDirection(int wheel) const;
    bool IsFrontWheel(int wheel) const;
    Vector3 GetWheelAxle(int wheel) const;
    Vector3 GetContactPosition(int wheel) const;
    Vector3 GetContactNormal(int wheel) const;
    float GetInAirRPM() const;
    IntVector3 GetCoordinateSystem() const;

    static const IntVector3 RIGHT_UP_FORWARD;
    static const IntVector3 RIGHT_FORWARD_UP;
    static const IntVector3 UP_FORWARD_RIGHT;
    static const IntVector3 UP_RIGHT_FORWARD;
    static const IntVector3 FORWARD_RIGHT_UP;
    static const IntVector3 FORWARD_UP_RIGHT;
};
