$#include "IO/Serializer.h"

class Serializer
{
    // unsigned Write(const void* data, unsigned size);
    tolua_outside unsigned SerializerWrite @ Write(const VectorBuffer& buffer);

    bool WriteInt(int value);
    bool WriteInt64(long long value);
    bool WriteShort(short value);
    bool WriteByte(signed char value);
    bool WriteUInt(unsigned value);
    bool WriteUInt64(unsigned long long value);
    bool WriteUShort(unsigned short value);
    bool WriteUByte(unsigned char value);
    bool WriteBool(bool value);
    bool WriteFloat(float value);
    bool WriteDouble(double value);
    bool WriteIntRect(const IntRect& value);
    bool WriteIntVector2(const IntVector2& value);
    bool WriteIntVector3(const IntVector3& value);
    bool WriteRect(const Rect& value);
    bool WriteVector2(const Vector2& value);
    bool WriteVector3(const Vector3& value);
    bool WritePackedVector3(const Vector3& value, float maxAbsCoord);
    bool WriteVector4(const Vector4& value);
    bool WriteQuaternion(const Quaternion& value);
    bool WritePackedQuaternion(const Quaternion& value);
    bool WriteMatrix3(const Matrix3& value);
    bool WriteMatrix3x4(const Matrix3x4& value);
    bool WriteMatrix4(const Matrix4& value);
    bool WriteColor(const Color& value);
    bool WriteBoundingBox(const BoundingBox& value);
    bool WriteString(const String value);
    bool WriteFileID(const String value);
    bool WriteStringHash(const StringHash& value);

    // bool WriteBuffer(const PODVector<unsigned char>& buffer);
    tolua_outside bool SerializerWriteBuffer @ WriteBuffer(const VectorBuffer& buffer);

    bool WriteResourceRef(const ResourceRef& value);
    bool WriteResourceRefList(const ResourceRefList& value);
    bool WriteVariant(const Variant& value);
    bool WriteVariantData(const Variant& value);
    bool WriteVariantVector(const VariantVector& value);
    bool WriteVariantMap(const VariantMap& value);
    bool WriteVLE(unsigned value);
    bool WriteNetID(unsigned value);
    bool WriteLine(const String value);
};

${
static unsigned SerializerWrite(Serializer* serializer, const VectorBuffer& buffer)
{
    return serializer->Write(buffer.GetData(), buffer.GetSize());
}

static bool SerializerWriteBuffer(Serializer* serializer, const VectorBuffer& buffer)
{
    return serializer->WriteBuffer(buffer.GetBuffer());
}
$}
